{"ast":null,"code":"var _jsxFileName = \"/Users/shayanbozorgmanesh/Documents/Parking/coinlink-mvp/frontend/src/components/TradingViewWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingViewWidget = () => {\n  _s();\n  const containerRef = useRef(null);\n\n  // Build config via useMemo so any change re-initializes the widget\n  const config = useMemo(() => ({\n    allow_symbol_change: false,\n    calendar: false,\n    details: false,\n    hide_side_toolbar: true,\n    hide_top_toolbar: true,\n    hide_legend: true,\n    hide_volume: false,\n    hotlist: false,\n    interval: 'D',\n    locale: 'en',\n    save_image: false,\n    style: '1',\n    symbol: 'COINBASE:BTCUSD',\n    theme: 'dark',\n    timezone: 'exchange',\n    backgroundColor: '#0F0F0F',\n    gridColor: 'rgba(0, 0, 0, 0)',\n    watchlist: [],\n    withdateranges: true,\n    compareSymbols: [],\n    studies: [],\n    autosize: true\n  }), []);\n  const configString = useMemo(() => JSON.stringify(config), [config]);\n  useEffect(() => {\n    // Create the script element\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js';\n    script.async = true;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'anonymous';\n    script.onerror = e => {\n      try {\n        console.error('TradingView script failed to load');\n      } catch {}\n      // Prevent bubbling generic error overlays from third-party script\n      try {\n        if (e && e.preventDefault) e.preventDefault();\n      } catch {}\n    };\n\n    // Ensure container exists before loading widget\n    const container = containerRef.current;\n    if (!container) {\n      return () => {};\n    }\n    // Set the widget configuration\n    script.innerHTML = configString;\n\n    // Clear container and append script\n    if (container) {\n      container.innerHTML = '';\n      try {\n        // Guard against missing inner widget div\n        const target = container.querySelector('.tradingview-widget-container__widget') || container;\n        target.appendChild(script);\n      } catch (_) {\n        // Ignore DOM exceptions from double-mounts\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      try {\n        if (containerRef.current) {\n          containerRef.current.innerHTML = '';\n        }\n      } catch (e) {}\n    };\n  }, [configString]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tradingview-widget-container\",\n    style: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#0F0F0F'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tradingview-widget-container__widget\",\n      style: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#0F0F0F'\n      },\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingViewWidget, \"RJlib0+oTb7kTYnCwXj8n+w9Y9Q=\");\n_c = TradingViewWidget;\nexport default TradingViewWidget;\nvar _c;\n$RefreshReg$(_c, \"TradingViewWidget\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","jsxDEV","_jsxDEV","TradingViewWidget","_s","containerRef","config","allow_symbol_change","calendar","details","hide_side_toolbar","hide_top_toolbar","hide_legend","hide_volume","hotlist","interval","locale","save_image","style","symbol","theme","timezone","backgroundColor","gridColor","watchlist","withdateranges","compareSymbols","studies","autosize","configString","JSON","stringify","script","document","createElement","src","async","type","crossOrigin","onerror","e","console","error","preventDefault","container","current","innerHTML","target","querySelector","appendChild","_","className","height","width","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shayanbozorgmanesh/Documents/Parking/coinlink-mvp/frontend/src/components/TradingViewWidget.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\n\nconst TradingViewWidget = () => {\n  const containerRef = useRef(null);\n\n  // Build config via useMemo so any change re-initializes the widget\n  const config = useMemo(() => ({\n    allow_symbol_change: false,\n    calendar: false,\n    details: false,\n    hide_side_toolbar: true,\n    hide_top_toolbar: true,\n    hide_legend: true,\n    hide_volume: false,\n    hotlist: false,\n    interval: 'D',\n    locale: 'en',\n    save_image: false,\n    style: '1',\n    symbol: 'COINBASE:BTCUSD',\n    theme: 'dark',\n    timezone: 'exchange',\n    backgroundColor: '#0F0F0F',\n    gridColor: 'rgba(0, 0, 0, 0)',\n    watchlist: [],\n    withdateranges: true,\n    compareSymbols: [],\n    studies: [],\n    autosize: true,\n  }), []);\n  const configString = useMemo(() => JSON.stringify(config), [config]);\n\n  useEffect(() => {\n    // Create the script element\n    const script = document.createElement('script');\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js';\n    script.async = true;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'anonymous';\n    script.onerror = (e) => {\n      try { console.error('TradingView script failed to load'); } catch {}\n      // Prevent bubbling generic error overlays from third-party script\n      try { if (e && e.preventDefault) e.preventDefault(); } catch {}\n    };\n    \n    // Ensure container exists before loading widget\n    const container = containerRef.current;\n    if (!container) {\n      return () => {};\n    }\n    // Set the widget configuration\n    script.innerHTML = configString;\n\n    // Clear container and append script\n    if (container) {\n      container.innerHTML = '';\n      try {\n        // Guard against missing inner widget div\n        const target = container.querySelector('.tradingview-widget-container__widget') || container;\n        target.appendChild(script);\n      } catch (_) {\n        // Ignore DOM exceptions from double-mounts\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      try {\n        if (containerRef.current) {\n          containerRef.current.innerHTML = '';\n        }\n      } catch (e) {}\n    };\n  }, [configString]);\n\n  return (\n    <div className=\"tradingview-widget-container\" style={{height: '100%', width: '100%', backgroundColor: '#0F0F0F'}}>\n      <div className=\"tradingview-widget-container__widget\" style={{height: '100%', width: '100%', backgroundColor: '#0F0F0F'}} ref={containerRef}></div>\n    </div>\n  );\n};\n\nexport default TradingViewWidget;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}